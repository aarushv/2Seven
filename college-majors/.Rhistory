flights %>%
filter(dest == "SEA") %>%
group_by(origin) %>%
count()
flights %>%
filter(dest == "SEA", arr_delay >0) %>%
group_by(carrier) %>%
summarized(d = mean(arr_delay, na.rm=TRUE))
source('~/OneDrive/info201b/GoodClassExampledplyr.R', echo=TRUE)
source('~/OneDrive/info201b/GoodClassExampledplyr.R', echo=TRUE)
source('~/OneDrive/info201b/GoodClassExampledplyr.R', echo=TRUE)
source('~/OneDrive/info201b/Lab_Exercises/ch10-dplyr/exercise-4/exercise.R', echo=TRUE)
nycflights13
nycflights13::airlines
nycflights13::flights
flights %>%
mutate(time_gained_air = arr_dely - dep_delay)
flights %>%
mutate(time_gained_air = arr_delay - dep_delay)
flights$time_gained_air
flights %>%
mutate(time_gained_air = arr_delay - dep_delay)
flights %>%
mutate(time_gained_air = arr_delay - dep_delay)
flights %>%
mutate(time_gained_air = (arr_delay - dep_delay))
flights$time_gained_air
# Install the nycflights13 package and read it in.  Require the dplyr package
# install.packages("nycflights13")
library(nycflights13)
library(dplyr)
flights %>%
mutate(time_gained_air = (arr_delay - dep_delay))
flights$time_gained_air
view(flights)
View(flights)
flights %>%
mutate(time_gained_air = arr_delay - dep_delay)
flights$time_gained_air
flights %>%
mutate(time_gained_air = 'arr_delay' - 'dep_delay')
flights %>%
mutate(time_gained_air = arr_delay - dep_delay)
flights <- flights %>%
mutate(time_gained_air = arr_delay - dep_delay)
flights$time_gained_air
flights %>%
desc(time_gained_air)
flights <- flights %>%
mutate(time_gained_air = arr_delay - dep_delay) %>%
desc(time_gained_air)
flights <- flights %>%
mutate(time_gained_air = arr_delay - dep_delay) %>%
arrange(desc(time_gained_air))
flights
View(flights)
hist(time_gained_air)
hist(time_gained_air)
hist(flights)
hist(time_gained_air, plot = TRUE)
hist(flights, plot = TRUE)
hist(flights$time_gained_air, plot = TRUE)
flights_to_SEA <- flights %>%
select(dest == "SEA")
flights_to_SEA <- flights %>%
select(dest = "SEA")
flights_to_SEA <- flights %>%
select(dest == "SEA")
flights_to_SEA <- flights %>%
filter(dest == "SEA")
flights_to_SEA
hist(flights_to_SEA$time_gained_air, plot = TRUE)
print(mean(flights_to_SEA$time_gained_air))
print(mean(flights_to_SEA$time_gained_air, na.rm = TRUE))
install.packages("rgl")
library(rgl)
install.packages("rgl")
name_first_pokemn <- first_pokemon$name
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
response_pik <- GET("https://pokeapi.co/api/v2/pokemon-species/pikachu")
body_pik <- content(response_pik, "text")
pikachu_info <- fromKSON(body_pik)
pikachu_info <- fromJSON(body_pik)
pikcahu_info$ID
pikcahu_info$id
pikachu_info <- fromJSON(body_pik)
pikcahu_info$id
pikachu_info <- fromJSON(body_pik)
pikcahu_info$id
response_pik <- GET("https://pokeapi.co/api/v2/pokemon-species/pikachu")
body_pik <- content(response_pik, "text")
pikachu_info <- fromJSON(body_pik)
pikcahu_info$id
pikachu_id <- pikcahu_info$id
body_pik <- content(response_pik, "text")
pikachu <- fromJSON(body_pik)
pikachu_id <- pikcahu$id
##Prorepublica API Key
republica_key <- J6ZdcfTq3ZDPgsG6PdyZdX7HjTxaqNzD0ez6Mp2l
##Prorepublica API Key
republica_key <- "J6ZdcfTq3ZDPgsG6PdyZdX7HjTxaqNzD0ez6Mp2l"
library(httr)
library(jsonlite)
info_response <- GET("https://www.googleapis.com/civicinfo/v2/representatives?key=<AIzaSyAyG4KpRgR0M5TLDnFROjwGy685FKhUMlU>&address=1263%20Pacific%20Ave.%20Kansas%20City%20KS)
google_base_api <- "https://www.googleapis.com/civicinfo/v2"
info_response <- GET("https://www.googleapis.com/civicinfo/v2/representatives?key=<AIzaSyAyG4KpRgR0M5TLDnFROjwGy685FKhUMlU>&address=1263%20Pacific%20Ave.%20Kansas%20City%20KS")
rep_info <- fromJSON(content(info_response,"test"))
source('~/OneDrive/info201b/a5/a5_workspace_practice.R', echo=TRUE)
rep_info <- content(info_response,"test"))
rep_info <- content(info_response,"test")
print(info_response)
library(jsonlite)
library(httr)
google_base_api <- "https://www.googleapis.com/civicinfo/v2"
info_response <- GET("https://www.googleapis.com/civicinfo/v2/representatives?key=<AIzaSyAyG4KpRgR0M5TLDnFROjwGy685FKhUMlU>&address=1263%20Pacific%20Ave.%20Kansas%20City%20KS")
rep_info <- content(info_response,"test")
library("jsonlite")
library("httr")
google_base_api <- "https://www.googleapis.com/civicinfo/v2"
info_response <- GET("https://www.googleapis.com/civicinfo/v2/representatives?key=<AIzaSyAyG4KpRgR0M5TLDnFROjwGy685FKhUMlU>&address=1263%20Pacific%20Ave.%20Kansas%20City%20KS")
rep_info <- content(info_response,"test")
google_base_api <- "https://www.googleapis.com/civicinfo/v2"
info_response <- GET("https://www.googleapis.com/civicinfo/v2/representatives?key=<AIzaSyAyG4KpRgR0M5TLDnFROjwGy685FKhUMlU>&address=1263%20Pacific%20Ave.%20Kansas%20City%20KS")
print(info_response)
info_response <- GET("https://www.googleapis.com/civicinfo/v2/representatives?key=<AIzaSyBmCswjo5VN_IVwiH31SRR_yBjek8ke2UA>&address=1263%20Pacific%20Ave.%20Kansas%20City%20KS")
print(info_response)
library("jsonlite")
library("httr")
google_base_api <- "https://www.googleapis.com/civicinfo/v2"
info_response <- GET("https://www.googleapis.com/civicinfo/v2/representatives?key=<AIzaSyCOSfWwsAIO3ljEvTSVDcRzlMBIaFa7oA0>&address=1263%20Pacific%20Ave.%20Kansas%20City%20KS")
print(info_response)
info_response <- GET("https://www.googleapis.com/civicinfo/v2/representatives?key=AIzaSyD2jptdl_qMb2-zpyN8X-ppCH36nq72MwA&address=1263%20Pacific%20Ave.%20Kansas%20City%20KS")
print(info_response)
info_response <- GET("https://www.googleapis.com/civicinfo/v2/representatives?key=<AIzaSyD2jptdl_qMb2-zpyN8X-ppCH36nq72MwA>&address=1263%20Pacific%20Ave.%20Kansas%20City%20KS")
print(info_response)
info_response <- GET("https://www.googleapis.com/civicinfo/v2/elections?key=AIzaSyCOSfWwsAIO3ljEvTSVDcRzlMBIaFa7oA0")
print(info_response)
rep_info <- content(info_response,"test")
rep_info <- content(info_response,"text")
rep_info
rep_list  <- fromJSON(rep_info)
rep_list
rep_list$name
View(rep_list)
library(ggplot2)
ggplot(diamonds)
ggplot(diamonds, aes(x=carat,y=price))
ggplot(diamonds, aes(x=carat,y=price + geom_point()))
library(ggplot2)
ggplot(diamonds)
ggplot(diamonds, aes(x=carat,y=price + geom_point()))
ggplot(diamonds, aes(x=carat,y=price, geom_point()))
ggplot(diamonds, aes(x=carat,y=price) + geom_point()
)
ggplot(diamonds, aes(x=carat,y=price)) + geom_point()
ggplot(economics,aes(date,uemped)) +geom_line() +geom_point()
ggplot(diamonds, aes(x=carat,y=price)) + geom_point()+ geom_line()
##US Map
ggplot(map_data("state"),) + geom_map()
install.packages("maps")
food <- GET("https://api.nal.usda.gov/ndb/reports/V2?ndbno=01009&ndbno=45202763&ndbno=35193&type=b&format=xml&api_key=L8DCuxGHiFCiNr8JChoIB1ZB9NZbNbSlIpvpYx0Z)
)
^c
food <- GET("https://api.nal.usda.gov/ndb/reports/V2?ndbno=01009&ndbno=45202763&ndbno=35193&type=b&format=xml&api_key=L8DCuxGHiFCiNr8JChoIB1ZB9NZbNbSlIpvpYx0Z")
library("httr")
food <- GET("https://api.nal.usda.gov/ndb/reports/V2?ndbno=01009&ndbno=45202763&ndbno=35193&type=b&format=xml&api_key=L8DCuxGHiFCiNr8JChoIB1ZB9NZbNbSlIpvpYx0Z")
food_info <- content(food, "text")
source('~/.active-rstudio-document', echo=TRUE)
View(food_list)
food <- GET("https://api.nal.usda.gov/ndb/reports/V2?ndbno=45078606&type=b&format=json&api_key=L8DCuxGHiFCiNr8JChoIB1ZB9NZbNbSlIpvpYx0Z")
food_info <- content(food, "text")
food_list <- fromJSON(food_info)
View(food_list)
source('~/.active-rstudio-document', echo=TRUE)
View(food_list)
food <- GET("https://api.nal.usda.gov/ndb/reports/V2?ndbno=45078606&type=b&format=json&api_key=L8DCuxGHiFCiNr8JChoIB1ZB9NZbNbSlIpvpYx0Z")
View(food)
food <- GET("https://api.nal.usda.gov/ndb/reports/V2?ndbno=010900&type=b&format=json&api_key=L8DCuxGHiFCiNr8JChoIB1ZB9NZbNbSlIpvpYx0Z")
food_info <- content(food, "text")
food_list <- fromJSON(food_info)
View(food_list)
food <- GET("https://api.nal.usda.gov/ndb/reports/V2?ndbno=45078606&type=b&format=json&api_key=L8DCuxGHiFCiNr8JChoIB1ZB9NZbNbSlIpvpYx0Z")
food_info <- content(food, "text")
food_list <- fromJSON(food_info)
View(food_list)
library("httr")
library("jsonlite")
food <- GET("https://api.nal.usda.gov/ndb/reports/V2?ndbno=45078606&type=b&format=json&api_key=L8DCuxGHiFCiNr8JChoIB1ZB9NZbNbSlIpvpYx0Z")
food_info <- content(food, "text")
food_list <- fromJSON(food_info)
View(food_list)
install.packages("shiny")
source('~/GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm123/Shiny/cereal_app.R', echo=TRUE)
runApp('GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm123/Shiny/cereal_app.R')
runApp('GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm123/Shiny/cereal_app.R')
runApp('GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm123/Shiny/cereal_app.R')
runApp('GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm123/Shiny/cereal_app.R')
runApp('GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm123/Shiny/cereal_app.R')
shiny::runApp('GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm123')
runApp('GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm123')
runApp('GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm123')
library("shiny")
library("data.table")
library("ggplot2")
library("shiny")
runApp('GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm123')
library(rsconnect)
rsconnect::deployApp('~/GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm123')
rsconnect::deployApp('~/GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm')
rsconnect::setAccountInfo(name='marekl',
token='B3E3ED7F9777403DE2BDD7C7D0B7F19F',
secret='aoFwkNqN2HvhB0GeFoLzXP06ASyuUeA4KELUxwvC')
rsconnect::deployApp('~/GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm')
runApp('GoogleDrive/Sophomore_Year_College/info201b/a8/a8-shiny-loganm')
source('~/GoogleDrive/Sophomore_Year_College/info201b/Final_Project/2Seven/server.R', echo=TRUE)
source('~/GoogleDrive/Sophomore_Year_College/info201b/Final_Project/College_Majors.R', echo=TRUE)
library(plotly)
#This is for a faster read in of data
library(data.table)
students <- fread("recent-grads.csv", stringsAsFactors = FALSE)
View(students)
men_women <- students %>%
select(Men,Women,Total)
men_women <- students %>%
select(Men,Women,Total) %>%
filter(MAJOR == "SOCIOLOGY")
men_women <- students %>%
select(Men,Women,Total) %>%
filter(Major == "SOCIOLOGY")
View(students)
men_women <- students %>%
select(Men,Women,Total) %>%
filter_("Major" == "SOCIOLOGY")
men)women
men_women <- students %>%
select(Men,Women,Total,major) %>%
filter_("Major" == "SOCIOLOGY")
men_women <- students %>%
select(Men,Women,Total,Major) %>%
filter_("Major" == "SOCIOLOGY")
men_women
men_women <- students %>%
select(Men,Women,Total,Major) %>%
filter_("Major" == "SOCIOLOGY")
men_women <- students %>%
select(Men,Women,Total,Major) %>%
filter(Major == "SOCIOLOGY")
men_women <- students %>%
select(Men,Women,Total,Major) %>%
filter(Major == "ECONOMICS")
men_women
men_women <- students %>%
select(Major,Men,Women,Total) %>%
filter(Major == "ECONOMICS")
View(men_women)
plot_ly(data = students, labels = c("Men", "Women"), values = ~c(89749,49498), type = pie)
plot_ly(data = students, labels = c("Men", "Women"), values = ~c(89749,49498), type = 'pie')
plot_ly(data = students, labels = c("Men", "Women"), values = ~c(Men,Women), type = 'pie')
plot_ly(data = students, labels = c("Men", "Women"), values = ~c(80,69), type = 'pie')
just_men <- men_women %>%
select(Men) %>%
summarize(n())
just_men
just_men <- men_women %>%
select(Men) %>%
summarize(sum())
just_men
just_men <- men_women %>%
select(Men) %>%
summarize(sum(men))
just_men <- men_women %>%
select(Men) %>%
summarize(sum(Men))
just_men
#This counts all the women in the specified major
just_women <- men_women %>%
select(Women) %>%
summarize(sum(Women))
just_women
#This plots the men vs women in a pie chart
plot_ly(data = students, labels = c("Men", "Women"), values = ~, type = 'pie')
#This plots the men vs women in a pie chart
plot_ly(data = students, labels = c("Men", "Women"), values = ~c(just_men,just_women), type = 'pie')
##this counts all the men in the specified major
just_men <- men_women %>%
select(Men) %>%
summarize(sum(Men))
men_women <- students %>%
###major_select is the input value for which major is being selected
select(Major,Men,Women,Total) %>%
filter(Major == "ECONOMICS")
men_women <- students %>%
###major_select is the input value for which major is being selected
select(Major,Men,Women,Total) %>%
filter(Major == "ECONOMICS")
##this counts all the men in the specified major
just_men <- men_women %>%
select(Men) %>%
summarize(sum(Men))
#This counts all the women in the specified major
just_women <- men_women %>%
select(Women) %>%
summarize(sum(Women))
#This plots the men vs women in a pie chart
plot_ly(data = students, labels = c("Men", "Women"), values = ~c(just_men,just_women), type = 'pie')
#This plots the men vs women in a pie chart
plot_ly(data = students, labels = c("Men", "Women"), values = ~c(just_men,just_women), type = 'pie')
men_women <- students %>%
###major_select is the input value for which major is being selected
select(Major,Men,Women,Total) %>%
filter(Major == "ECONOMICS")
men_women
#This plots the men vs women in a pie chart
plot_ly(data = students, labels = c("Men", "Women"), values = ~Men, type = 'pie')
#This plots the men vs women in a pie chart
plot_ly(data = students, labels = c("Men", "Women"), values = ~Men & ~Women, type = 'pie')
#This plots the men vs women in a pie chart
plot_ly(data = students, labels = c("Men", "Women"), values = c(Men,Women), type = 'pie')
men_women <- students %>%
###major_select is the input value for which major is being selected
select(Major,Men,Women,Total) %>%
filter(Major == "ECONOMICS")
#This plots the men vs women in a pie chart
plot_ly(data = men_women, labels = c("Men", "Women"), values = c(Men,Women), type = 'pie')
men_women <- students %>%
###major_select is the input value for which major is being selected
select(Major,Men,Women,Total) %>%
filter(Major == "ECONOMICS")
##this counts all the men in the specified major
just_men <- men_women %>%
select(Men) %>%
summarize(sum(Men))
#This counts all the women in the specified major
just_women <- men_women %>%
select(Women) %>%
summarize(sum(Women))
#This plots the men vs women in a pie chart
plot_ly(data = men_women, labels = c("Men", "Women"), values = c(Men,Women), type = 'pie')
men_women
#This plots the men vs women in a pie chart
plot_ly(data = men_women, labels = c("Men", "Women"), values = c(80,90), type = 'pie')
#This plots the men vs women in a pie chart
plot_ly(data = men_women, labels = c("Men", "Women"), values = c(Men,Women), type = 'pie')
#This plots the men vs women in a pie chart
plot_ly(data = men_women, labels = c("Men", "Women"), values = c(value$Men,value$Women), type = 'pie')
#This plots the men vs women in a pie chart
plot_ly(data = men_women, labels = c("Men", "Women"), values = ~c(Men,Women), type = 'pie')
employed <- students %>%
select(Employed,Unemployed,College_jobs,Non_college_jobs,Low_wage_jobs)
emploedy
employed
employed <- students %>%
select(Employed,Unemployed,College_jobs,Non_college_jobs,Low_wage_jobs,Major) %>%
filter(Major == "ECONOMICS")
employed
employed <- students %>%
select(Major,Employed,Unemployed,College_jobs,Non_college_jobs,Low_wage_jobs,) %>%
filter(Major == "ECONOMICS")
employed
plot_ly(data = employed, labels = c("Employed, Unemployed"), values = ~c(Emploued, Unemployed), type = 'pie')
plot_ly(data = employed, labels = c("Employed, Unemployed"), values = ~c(Employed, Unemployed), type = 'pie')
employed <- students %>%
select(Major,Employed,Unemployed,College_jobs,Non_college_jobs,Low_wage_jobs,) %>%
filter(Major == "ECONOMICS")
plot_ly(data = employed, labels = c("Employed, Unemployed"), values = ~c(Employed, Unemployed), type = 'pie')
employed\
employed
#This plots the men vs women in a pie chart
plot_ly(data = men_women, labels = c("Men", "Women"), values = ~c(Men,Women), type = 'pie')
employed <- students %>%
select(Major,Employed,Unemployed,College_jobs,Non_college_jobs,Low_wage_jobs,) %>%
filter(Major == "ECONOMICS")
plot_ly(data = employed, labels = c("Employed, Unemployed"), values = ~c(Employed, Unemployed), type = 'pie')
employed <- students %>%
select(Major,Employed,Unemployed,College_jobs,Non_college_jobs,Low_wage_jobs) %>%
filter(Major == "ECONOMICS")
plot_ly(data = employed, labels = c("Employed, Unemployed"), values = ~c(Employed, Unemployed), type = 'pie')
plot_ly(data = employed, labels = c("Employed","Unemployed"), values = ~c(Employed, Unemployed), type = 'pie')
#This plots the men vs women in a pie chart
plot_ly(data = men_women, labels = c("Men", "Women"), values = ~c(Men,Women), type = 'pie') %>%
layout(title = 'Gender Ratio in Major')
plot_ly(data = employed, labels = c("Employed","Unemployed"), values = ~c(Employed, Unemployed), type = 'pie') %>%
layout(title = 'Employment vs Unemployment in Recent Graduates')
plot_ly(data = employed, labels = c("Jobs that Require College Degree", "Jobs that Do Not Require a College Degree", "Jobs Close to or at Minimum Wage","Unemployed"), values = ~c(College_jobs,Non_college_jobs, Low_wage_jobs, Unemployed), type = 'pie') %>%
layout(title = 'Employment vs Unemployment in Recent Graduates')
plot_ly(data = employed, labels = c("Jobs that Require College Degree", "Jobs that Do Not Require a College Degree", "Jobs Close to or at Minimum Wage","Unemployed"), values = ~c(College_jobs,Non_college_jobs, Low_wage_jobs, Unemployed), type = 'pie', marker = list(colors = c("#66a3ff","#4d94ff","#3385ff","#ff3333"))) %>%
layout(title = 'Employment vs Unemployment in Recent Graduates')
plot_ly(data = employed, labels = c("Jobs that Require College Degree", "Jobs that Do Not Require a College Degree", "Jobs Close to or at Minimum Wage","Unemployed"), values = ~c(College_jobs,Non_college_jobs, Low_wage_jobs, Unemployed), type = 'pie', marker = list(colors = c("#66a3ff","#4d94ff","#3385ff","#ff3333")), showLegend=TRUE) %>%
layout(title = 'Employment vs Unemployment in Recent Graduates')
plot_ly(data = employed, labels = c("Jobs that Require College Degree", "Jobs that Do Not Require a College Degree", "Jobs Close to or at Minimum Wage","Unemployed"), values = ~c(College_jobs,Non_college_jobs, Low_wage_jobs, Unemployed), type = 'pie', marker = list(colors = c("#66a3ff","#4d94ff","#3385ff","#ff3333"))) %>%
layout(title = 'Employment vs Unemployment in Recent Graduates') %>%
add_trace(name = "Blue Represents Employment") %>%
add_trace(name = "Red Represents Unemployment")
plot_ly(data = employed, labels = c("Jobs that Require College Degree", "Jobs that Do Not Require a College Degree", "Jobs Close to or at Minimum Wage","Unemployed"), values = ~c(College_jobs,Non_college_jobs, Low_wage_jobs, Unemployed), type = 'pie', marker = list(colors = c("#66a3ff","#4d94ff","#3385ff","#ff3333"))) %>%
layout(title = 'Employment vs Unemployment in Recent Graduates')
pay <- students %>%
select(Major,P25th,Median,P75th) %>%
filter(Major == "History")
pay
pay <- students %>%
select(Major,P25th,Median,P75th) %>%
filter(Major == "HISTORY")
pay
plot_ly(data = pay, labels = c("25th Percentile", "Median", "75th Percentile"), type = 'bar') %>%
layout(title = 'Pay Rate')
plot_ly(data = pay, labels = c("25th Percentile", "Median", "75th Percentile"), values = (P25th,Median,P75th), type = 'histogram') %>%
layout(title = 'Pay Rate')
plot_ly(data = pay, labels = c("25th Percentile", "Median", "75th Percentile"), values = (P25th,Median,P75th), type = 'histogram') %>%
layout(title = 'Pay Rate')
plot_ly(data = pay, labels = c("25th Percentile", "Median", "75th Percentile"), values = (P25th,Median,P75th), type = 'histogram', mode = markers) %>%
layout(title = 'Pay Rate')
plot_ly(data = pay, labels = c("25th Percentile", "Median", "75th Percentile"), values = (P25th,Median,P75th), type = 'bar', mode = markers) %>%
layout(title = 'Pay Rate')
plot_ly(data = pay, labels = c("25th Percentile", "Median", "75th Percentile"), values = (P25th,Median,P75th), type = 'bar', mode = markers)
plot_ly(data = pay, labels = c("25th Percentile", "Median", "75th Percentile"), values = (P25th, Median, P75th), type = 'bar', mode = 'markers') %>%
layout(title = 'Pay Rate')
plot_ly(data = pay, labels = c("25th Percentile", "Median", "75th Percentile"), values = ~c(P25th, Median, P75th), type = 'bar', mode = 'markers') %>%
layout(title = 'Pay Rate')
plot_ly(data = pay, x = c("25th Percentile", "Median", "75th Percentile"), y = ~c(P25th, Median, P75th), type = 'bar', mode = 'markers') %>%
layout(title = 'Pay Rate')
plot_ly(data = employed, labels = c("Jobs that Require College Degree", "Jobs that Do Not Require a College Degree", "Jobs Close to or at Minimum Wage","Unemployed"), values = ~c(College_jobs,Non_college_jobs, Low_wage_jobs, Unemployed), type = 'pie', marker = list(colors = c("#66a3ff","#4d94ff","#3385ff","#ff3333"))) %>%
layout(yaxis = list(title = 'Pay in Thousands of Dollars', title = 'Employment vs Unemployment')
})
plot_ly(data = employed, labels = c("Jobs that Require College Degree", "Jobs that Do Not Require a College Degree", "Jobs Close to or at Minimum Wage","Unemployed"), values = ~c(College_jobs,Non_college_jobs, Low_wage_jobs, Unemployed), type = 'pie', marker = list(colors = c("#66a3ff","#4d94ff","#3385ff","#ff3333"))) %>%
layout(title = 'Employment vs Unemployment')
plot_ly(data = pay, x = c("25th Percentile", "Median", "75th Percentile"), y = ~c(P25th, Median, P75th), type = 'bar', mode = 'markers') %>%
layout(yaxis = list(title = "Pay Rate in Thousands of Dollars", title = 'Pay Rate'))
plot_ly(data = pay, x = c("25th Percentile", "Median", "75th Percentile"), y = ~c(P25th, Median, P75th), type = 'bar') %>%
layout(yaxis = list(title = "Pay Rate in Thousands of Dollars", title = 'Pay Rate'))
plot_ly(data = pay, x = c("25th Percentile", "Median", "75th Percentile"), y = ~c(P25th, Median, P75th), type = 'bar') %>%
layout(title = 'Pay Rate', yaxis = list(title = "Pay Rate in Thousands of Dollars"))
major_select <- "ECONOMICS"
pay2 <- students %>%
select(Major,Major_Category,Median) %>%
filter(Major == "ECONOMICS")
pay2 <- students %>%
select(Major,Major_category,Median) %>%
filter(Major == "ECONOMICS")
pay2
pay2[2]
department_pay <- students %>%
select(Major,Major_category,Median) %>%
filter(Major_category == pay2[2])
department_pay
department_pay <- students %>%
select(Major,Major_category,Median) %>%
filter(Major_category == pay2[[2]])
department_pay
department_pay <- students %>%
select(Major,Major_category,Median) %>%
filter(Major_category == pay2[[2]]) %>%
summarize(mean(Median))
department_pay
department_pay <- students %>%
select(Major,Major_category,Median) %>%
filter(Major_category == pay2[[2]]) %>%
mutate(Median == mean(median))
department_pay
department_pay <- students %>%
select(Major,Major_category,Median) %>%
filter(Major_category == pay2[[2]]) %>%
mutate(Median == summarize(mean(median)))
department_pay
department_pay <- students %>%
select(Major,Major_category,Median) %>%
filter(Major_category == pay2[[2]]) %>%
summarize(mean(Median))
department_pay
department_pay <- students %>%
select(Major,Major_category,Median) %>%
filter(Major_category == pay2[[2]]) %>%
summarize(Mean = mean(Median))
department_pay
Department Median <- c(pay2[[2]],pay2[[2]],department_pay)
Department_Median <- c(pay2[[2]],pay2[[2]],department_pay)
Department_Median
Department_Median <- c("Major" = pay2[[2]],"Major_category" = pay2[[2]],department_pay)
Department_Median
Department_Median <- as.data.frame(c("Major" = pay2[[2]],"Major_category" = pay2[[2]],department_pay))
Department_Median
pay_comparison <- left_join(pay2,Department_Median)
pay_comparison
pay_comparison <- full_join(pay2,Department_Median)
pay_comparison
department_pay <- students %>%
select(Major,Major_category,Median) %>%
filter(Major_category == pay2[[2]]) %>%
summarize(Median = mean(Median))
Department_Median <- as.data.frame(c("Major" = pay2[[2]],"Major_category" = pay2[[2]],department_pay))
pay_comparison <- full_join(pay2,Department_Median)
pay_comparison
#This plots it
plotly(data = pay_comparison, x = c("Economics", pay2[[2]]), y = ~c(Median), type = 'bar') %>%
layout(title = 'Median Pay of Major vs Median Pay for Department')
#This plots it
plotly(data = pay_comparison, x = ~Major, y = ~Median), type = 'bar') %>%
layout(title = 'Median Pay of Major vs Median Pay for Department')
#This plots it
plotly(data = pay_comparison, x = ~c(Major), y = ~c(Median), type = 'bar') %>%
layout(title = 'Median Pay of Major vs Median Pay for Department')
#This plots it
plotly(data = pay_comparison, x = c("Dick", "Suck"), y = c(10,20), type = 'bar') %>%
layout(title = 'Median Pay of Major vs Median Pay for Department')
#This plots it
plotly(data = pay_comparison, x = ~Major, y = ~Median, type = 'bar') %>%
layout(title = 'Median Pay of Major vs Median Pay for Department')
pay_comparison
#This plots it
plot_ly(data = pay_comparison, x = ~Major, y = ~Median, type = 'bar') %>%
layout(title = 'Median Pay of Major vs Median Pay for Department')
